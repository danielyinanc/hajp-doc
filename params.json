{"name":"Hajp-doc","tagline":"HAJP Documentation","body":"# Welcome to HAJP Documentation.\r\nHigh availability Jenkins plugin is an Ericsson open sourced product designed to make high availability Jenkins clustering a reality with fail over capabilities. Considering the complexity of Jenkins as a platform and critical nature of this plugin, we will implement the most stringent software development quality assurance protocols.\r\n\r\n## Business Requirements\r\n\r\n<b> Main requirement: transparent fail over if the Jenkins master becomes unavailable.\r\n\r\nBy transparent fail over we mean:\r\n\r\nNew builds will run without interruption (builds in progress are lost)\r\nUser (human, plugin, other tools) have access immediately to another master that provide the same information (i.e. mirror of one that is unavailable)/\r\n\r\nBy unavailability we mean:\r\n\r\nUnplanned downtime, master not reachable.\r\nMaintenance that require restart of master (core upgrade, plugin install/upgrade...). In such case fail over happen as soon the master cannot process new builds anymore (prepare for shutdown, restart).\r\n\r\nBreakdown of main features\r\n\r\n* High availability\r\n* Instant or near-instant fail over\r\n* Leader to cluster member replication of\r\n  * Jobs\r\n  * Builds\r\n  * Users\r\n  * Plugins\r\n  * Global configuration\r\n* Active proxy to Leader\r\n* Cluster health and status portal\r\n* Cluster control and reporting \r\n\r\n## Architecture\r\n\r\nJenkins is a distributed project build processing system at heart with quite a number of community and CloudBees developed plugins. As it grew overtime from its Hudson roots, Jenkins took an almost organic path making certain types of operations a breeze and other types of operations virtually impossible.\r\n\r\nHAJP 2.0 is built on a synchronized cluster with a single active master (referred as Leader) at any given time with many hot-standby masters and many slave instances.\r\n\r\n### Principles\r\n\r\n* No single point of failure\r\n* Unidirectional communication\r\n* Instant or near instant fail over\r\n* Only synchronize what could be synchronized with zero failure\r\n* Minimalist -- avoid accidental complexity","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}